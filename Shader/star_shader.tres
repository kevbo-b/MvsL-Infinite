[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out3p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:4
	float n_out4p0 = TIME;

// ScalarFunc:5
	float n_out5p0 = sin(n_out4p0);

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out5p0;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 400, 100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 60, 0 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -260, 0 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -300, 240 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -20, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 0, 0, 0, 4, 0, 5, 0, 5, 0, 0, 1 )

[resource]
shader = SubResource( 5 )
