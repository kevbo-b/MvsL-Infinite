[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.118255, 0.0599213, 0.300781, 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=2]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 1

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[resource]
code = "shader_type canvas_item;



void vertex() {
// Input:4
	float n_out4p0;
	n_out4p0 = TIME;

// ScalarOp:9
	float n_in9p1 = 1.00000;
	float n_out9p0;
	n_out9p0 = n_out4p0 * n_in9p1;

// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(VERTEX,0.0);

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = vec3(n_out9p0) * n_out5p0;

// ScalarFunc:15
	float n_out15p0;
	n_out15p0 = cos(dot(n_out7p0,vec3(0.333333,0.333333,0.333333)));

// ScalarFunc:14
	float n_out14p0;
	n_out14p0 = sin(dot(n_out7p0,vec3(0.333333,0.333333,0.333333)));

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0;
	n_out11p0 = vec3( n_out15p0 , n_out14p0 , n_in11p2 );

// VectorOp:13
	vec3 n_in13p1 = vec3(0.50000,1.00000,0.00000);
	vec3 n_out13p0;
	n_out13p0 = n_out11p0 + n_in13p1;

// VectorOp:12
	vec3 n_out12p0;
	n_out12p0 = n_out13p0 * n_out5p0;

// Output:0
	VERTEX = n_out12p0.xy;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -102.216, -45 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 940, 540 )
nodes/vertex/4/node = SubResource( 7 )
nodes/vertex/4/position = Vector2( 20, -120 )
nodes/vertex/5/node = SubResource( 8 )
nodes/vertex/5/position = Vector2( 60, 260 )
nodes/vertex/7/node = SubResource( 9 )
nodes/vertex/7/position = Vector2( 440, 40 )
nodes/vertex/9/node = SubResource( 10 )
nodes/vertex/9/position = Vector2( 180, -40 )
nodes/vertex/11/node = SubResource( 2 )
nodes/vertex/11/position = Vector2( 800, 140 )
nodes/vertex/12/node = SubResource( 3 )
nodes/vertex/12/position = Vector2( 680, 540 )
nodes/vertex/13/node = SubResource( 4 )
nodes/vertex/13/position = Vector2( 580, 300 )
nodes/vertex/14/node = SubResource( 5 )
nodes/vertex/14/position = Vector2( 520, 200 )
nodes/vertex/15/node = SubResource( 6 )
nodes/vertex/15/position = Vector2( 620, 60 )
nodes/vertex/connections = PoolIntArray( 9, 0, 7, 0, 4, 0, 9, 0, 12, 0, 0, 0, 11, 0, 13, 0, 13, 0, 12, 0, 7, 0, 14, 0, 7, 0, 15, 0, 5, 0, 12, 1, 5, 0, 7, 1, 14, 0, 11, 1, 15, 0, 11, 0 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/7/node = SubResource( 1 )
nodes/fragment/7/position = Vector2( 540, -100 )

